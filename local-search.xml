<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客基本用法</title>
    <link href="/2024/01/12/Hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <url>/2024/01/12/Hexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客基本用法"><a href="#Hexo博客基本用法" class="headerlink" title="Hexo博客基本用法"></a>Hexo博客基本用法</h1><span id="more"></span><h3 id="1-新建文章"><a href="#1-新建文章" class="headerlink" title="1. 新建文章"></a>1. 新建文章</h3><p>在项目根目录下执行新建命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局</p><h4 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h4><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><p><strong>禁用布局</strong>：如果你不希望一篇文章（post&#x2F;page）使用主题处理，请在它的 <code>front-matter</code> 中设置 <code>layout: false</code>。</p><h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。你可以使用以下占位符：</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>:title</code></td><td align="left">标题（小写，空格将会被替换为短杠）</td></tr><tr><td align="left"><code>:year</code></td><td align="left">建立的年份，比如， <code>2015</code></td></tr><tr><td align="left"><code>:month</code></td><td align="left">建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td align="left"><code>:i_month</code></td><td align="left">建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td align="left"><code>:day</code></td><td align="left">建立的日期（有前导零），比如， <code>07</code></td></tr><tr><td align="left"><code>:i_day</code></td><td align="left">建立的日期（无前导零），比如， <code>7</code></td></tr></tbody></table><h3 id="2-删除文章"><a href="#2-删除文章" class="headerlink" title="2. 删除文章"></a>2. 删除文章</h3><p>直接删除项目根目录<code>source/</code>文件夹下的文章源文件即可。</p><h3 id="3-部署到GitHub"><a href="#3-部署到GitHub" class="headerlink" title="3. 部署到GitHub"></a>3. 部署到GitHub</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean &amp; hexo g &amp; hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac系统命令行修改dns</title>
    <link href="/2024/01/12/Mac%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9dns/"/>
    <url>/2024/01/12/Mac%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BF%AE%E6%94%B9dns/</url>
    
    <content type="html"><![CDATA[<h1 id="Mac-命令行修改dns"><a href="#Mac-命令行修改dns" class="headerlink" title="Mac 命令行修改dns"></a>Mac 命令行修改dns</h1><span id="more"></span><h3 id="查看本地DNS服务器"><a href="#查看本地DNS服务器" class="headerlink" title="查看本地DNS服务器"></a>查看本地DNS服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">networksetup -getdnsservers Wi-Fi<br></code></pre></td></tr></table></figure><h3 id="配置本地DNS服务器"><a href="#配置本地DNS服务器" class="headerlink" title="配置本地DNS服务器"></a>配置本地DNS服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">networksetup -setdnsservers Wi-Fi 8.8.8.8<br></code></pre></td></tr></table></figure><h3 id="nslookup查看DNS信息"><a href="#nslookup查看DNS信息" class="headerlink" title="nslookup查看DNS信息"></a>nslookup查看DNS信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nslookup baidu.com<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Mac</category>
      
    </categories>
    
    
    <tags>
      
      <tag>dns</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UOS网卡down</title>
    <link href="/2024/01/12/UOS%E7%BD%91%E5%8D%A1down/"/>
    <url>/2024/01/12/UOS%E7%BD%91%E5%8D%A1down/</url>
    
    <content type="html"><![CDATA[<h3 id="UOS网卡down"><a href="#UOS网卡down" class="headerlink" title="UOS网卡down"></a>UOS网卡down</h3><span id="more"></span><ol><li><p>加载bonding模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe --first-time bonding<br>modprobe bonding<br></code></pre></td></tr></table></figure></li><li><p>重启网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service network restart<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>UOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>网卡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UOS系统双网卡做bond</title>
    <link href="/2024/01/12/UOS%E7%B3%BB%E7%BB%9F%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%81%9Abond/"/>
    <url>/2024/01/12/UOS%E7%B3%BB%E7%BB%9F%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%81%9Abond/</url>
    
    <content type="html"><![CDATA[<h2 id="UOS系统双网卡做bond"><a href="#UOS系统双网卡做bond" class="headerlink" title="UOS系统双网卡做bond"></a>UOS系统双网卡做bond</h2><span id="more"></span><ol><li><p>安装bonding工具包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install ifenslave -y<br></code></pre></td></tr></table></figure></li><li><p>配置开机自启bonding模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;bonding&quot; &gt;&gt; /etc/modules<br></code></pre></td></tr></table></figure></li><li><p>停止Networking和NetworkManager服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop networking<br>systemctl stop NetworkManager<br></code></pre></td></tr></table></figure></li><li><p>取消NetworkManager自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl disable NetworkManager<br></code></pre></td></tr></table></figure></li><li><p>加载bond模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">modprobe bonding<br></code></pre></td></tr></table></figure></li><li><p>检查bond模块是否正常加载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">lsmod | grep bonding<br></code></pre></td></tr></table></figure></li><li><p>修改&#x2F;etc&#x2F;network&#x2F;interfaces</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">auto bond1<br>iface bond1 inet static<br>        address 192.168.203.21<br>        gateway 192.168.203.254<br>        netmask 255.255.255.0<br>        bond-slaves none<br>        bond-mode active-backup<br>        bond-miimon 100<br>        bond-fail_over_mac 1<br>  <br>auto enp125s0f0<br>iface enp125s0f0 inet manual<br>        bond-master bond1<br>        bond-primary enp125s0f0 enp125s0f1<br>  <br>auto enp125s0f1<br>iface enp125s0f1 inet manual<br>        bond-master bond1<br>        bond-primary enp125s0f0 enp125s0f1<br></code></pre></td></tr></table></figure></li><li><p>启动Networking服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start networking<br></code></pre></td></tr></table></figure></li><li><p>刷新网卡信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr flush dev enp125s0f0<br>ip addr flush dev enp125s0f1<br></code></pre></td></tr></table></figure></li><li><p>实验down掉其中一个网卡是否正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifdown enp125s0f0<br>ifdown enp125s0f1<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>UOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>bond</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UOS系统NetworkManager切换Networking</title>
    <link href="/2024/01/12/UOS%E7%B3%BB%E7%BB%9FNetworkManager%E5%88%87%E6%8D%A2Networking/"/>
    <url>/2024/01/12/UOS%E7%B3%BB%E7%BB%9FNetworkManager%E5%88%87%E6%8D%A2Networking/</url>
    
    <content type="html"><![CDATA[<h2 id="UOS系统NetworkManager切换Networking"><a href="#UOS系统NetworkManager切换Networking" class="headerlink" title="UOS系统NetworkManager切换Networking"></a>UOS系统NetworkManager切换Networking</h2><span id="more"></span><ol><li><p>关闭NetworkManager</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo /etc/init.d/network-manager stop<br></code></pre></td></tr></table></figure></li><li><p>取消开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl disable NetworkManager<br></code></pre></td></tr></table></figure></li><li><p>启动networking</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/etc/init.d/networking restart<br></code></pre></td></tr></table></figure></li><li><p>修改 &#x2F;etc&#x2F;network&#x2F;interfaces 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">auto lo<br>iface lo inet loopback<br><br>auto enp…(网卡名称)<br>iface enp…(网卡名称) inet static<br>netmask 255.255.255.0<br>gateway 192.168.203.254<br>address 192.168.203.21<br></code></pre></td></tr></table></figure></li><li><p>重启网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr flush dev enp125s0f0 &amp;&amp; /etc/init.d/networking restart<br>systemctl status networking<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>UOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Networking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用bak格式数据库存储文件恢复达梦数据库</title>
    <link href="/2024/01/12/%E4%BD%BF%E7%94%A8bak%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2024/01/12/%E4%BD%BF%E7%94%A8bak%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h2 id="使用bak格式数据库存储文件恢复达梦数据库"><a href="#使用bak格式数据库存储文件恢复达梦数据库" class="headerlink" title="使用bak格式数据库存储文件恢复达梦数据库"></a>使用bak格式数据库存储文件恢复达梦数据库</h2><span id="more"></span><blockquote><p>注意：被恢复的数据库版本和原数据库版本必须一致</p></blockquote><h3 id="准备-bak备份文件集"><a href="#准备-bak备份文件集" class="headerlink" title="准备.bak备份文件集"></a>准备.bak备份文件集</h3><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20220108225439001.png" alt="image-20220108225439001"></p><h3 id="将-bak备份文件集传输到被恢复数据库服务器上"><a href="#将-bak备份文件集传输到被恢复数据库服务器上" class="headerlink" title="将.bak备份文件集传输到被恢复数据库服务器上"></a>将.bak备份文件集传输到被恢复数据库服务器上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp -r DB_GPR_DSC_* dmdba@192.168.201.253:/home/dmdba/DMBAK<br></code></pre></td></tr></table></figure><h3 id="切换到dmdba用户并停止数据库服务"><a href="#切换到dmdba用户并停止数据库服务" class="headerlink" title="切换到dmdba用户并停止数据库服务"></a>切换到dmdba用户并停止数据库服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">su dmdba <br>cd /home/dmdba/dmdbms/bin<br>./DmServiceDMSERVER stop<br></code></pre></td></tr></table></figure><h3 id="通过dmrman工具对数据库进行恢复"><a href="#通过dmrman工具对数据库进行恢复" class="headerlink" title="通过dmrman工具对数据库进行恢复"></a>通过dmrman工具对数据库进行恢复</h3><p>本次演示全量和增量的情况（一个全量备份文件和两个增量备份文件）。增量需要依赖于全量备份，所以需要先恢复全量备份。</p><h4 id="校验所有的备份集"><a href="#校验所有的备份集" class="headerlink" title="校验所有的备份集"></a>校验所有的备份集</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">CHECK BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_FULL_2022_01_03_00_00_27&#x27;<br>CHECK BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_INCREMENT_2022_01_04_00_00_27&#x27;<br>CHECK BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_INCREMENT_2022_01_05_00_00_27&#x27;<br></code></pre></td></tr></table></figure><h4 id="1-还原全量数据库"><a href="#1-还原全量数据库" class="headerlink" title="1. 还原全量数据库"></a>1. 还原全量数据库</h4><p>本次演示全量备份文件为5GB大小，服务器配置为32核心64GB，还原数据库时间为4分钟左右，具体的还原的时间根据服务器配置不同，时间上也会不同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RESTORE DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; FROM BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_FULL_2022_01_03_00_00_27&#x27;<br></code></pre></td></tr></table></figure><h4 id="2-恢复全量数据库"><a href="#2-恢复全量数据库" class="headerlink" title="2. 恢复全量数据库"></a>2. 恢复全量数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RECOVER DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; FROM BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_FULL_2022_01_03_00_00_27&#x27;<br></code></pre></td></tr></table></figure><h4 id="3-更新数据库"><a href="#3-更新数据库" class="headerlink" title="3. 更新数据库"></a>3. 更新数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RECOVER DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; UPDATE DB_MAGIC;<br></code></pre></td></tr></table></figure><h4 id="4-还原增量1数据库"><a href="#4-还原增量1数据库" class="headerlink" title="4. 还原增量1数据库"></a>4. 还原增量1数据库</h4><p>本次演示全量备份文件为500MB大小，服务器配置为32核心64GB，还原数据库时间为3分钟左右，具体的还原的时间根据服务器配置不同时间上也会不同。恢复增量时需要按照增量文件产生的时间依次执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RESTORE DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; FROM BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_INCREMENT_2022_01_04_00_00_27&#x27;<br></code></pre></td></tr></table></figure><h4 id="5-恢复增量1数据库"><a href="#5-恢复增量1数据库" class="headerlink" title="5. 恢复增量1数据库"></a>5. 恢复增量1数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RECOVER DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; FROM BACKUPSET &#x27;/home/dmdba/DMBAK/DB_GRP_DSC_INCREMENT_2022_01_04_00_00_27&#x27;<br></code></pre></td></tr></table></figure><h4 id="6-更新数据库"><a href="#6-更新数据库" class="headerlink" title="6. 更新数据库"></a>6. 更新数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RECOVER DATABASE &#x27;/DMDATA/DAMENG/dm.ini&#x27; UPDATE DB_MAGIC;<br></code></pre></td></tr></table></figure><h4 id="7-增量2重复4～6步即可。"><a href="#7-增量2重复4～6步即可。" class="headerlink" title="7. 增量2重复4～6步即可。"></a>7. 增量2重复4～6步即可。</h4><h4 id="8-所有备份文件恢复完成之后exit退出dmrman工具，并启动服务"><a href="#8-所有备份文件恢复完成之后exit退出dmrman工具，并启动服务" class="headerlink" title="8. 所有备份文件恢复完成之后exit退出dmrman工具，并启动服务"></a>8. 所有备份文件恢复完成之后exit退出dmrman工具，并启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./DmServiceDMSERVER start<br></code></pre></td></tr></table></figure><h4 id="9-使用原数据库的账号密码登录验证即可，如存在密码错误问题很大几率是因为数据库小版本不一样，更换成一样的版本即可。"><a href="#9-使用原数据库的账号密码登录验证即可，如存在密码错误问题很大几率是因为数据库小版本不一样，更换成一样的版本即可。" class="headerlink" title="9. 使用原数据库的账号密码登录验证即可，如存在密码错误问题很大几率是因为数据库小版本不一样，更换成一样的版本即可。"></a>9. 使用原数据库的账号密码登录验证即可，如存在密码错误问题很大几率是因为数据库小版本不一样，更换成一样的版本即可。</h4><h4 id="10-登录验证"><a href="#10-登录验证" class="headerlink" title="10. 登录验证"></a>10. 登录验证</h4>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>达梦数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>达梦数据库</tag>
      
      <tag>dmdbms</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux配置Java环境变量</title>
    <link href="/2024/01/12/Linux%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <url>/2024/01/12/Linux%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux配置Java环境变量"><a href="#Linux配置Java环境变量" class="headerlink" title="Linux配置Java环境变量"></a>Linux配置Java环境变量</h1><span id="more"></span><p>复制jdk到&#x2F;usr&#x2F;local&#x2F;下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp -r /opt/dmdbms/jdk /usr/local<br></code></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/profile<br></code></pre></td></tr></table></figure><p>按 <code>i</code> 进入编辑模式，光标移动到文件末尾，添加如下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">export JAVA_HOME=/usr/local/jdk<br>export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/<br>export PATH=$PATH:$JAVA_HOME/bin<br></code></pre></td></tr></table></figure><p>编辑完之后，按 <code>ESC</code>输入<code>:wq</code> 保存并退出，然后输入以下指令，刷新环境配置使其生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p>查看jdk是否安装成功，输入指令java -version即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -version<br></code></pre></td></tr></table></figure><p>出现以下内容代表java安装成功</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112144813387.png" alt="image-20240112144813387"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux使用crontab定时复制文件</title>
    <link href="/2024/01/12/Linux%E4%BD%BF%E7%94%A8crontab%E5%AE%9A%E6%97%B6%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/"/>
    <url>/2024/01/12/Linux%E4%BD%BF%E7%94%A8crontab%E5%AE%9A%E6%97%B6%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux使用crontab定时复制文件"><a href="#Linux使用crontab定时复制文件" class="headerlink" title="Linux使用crontab定时复制文件"></a>Linux使用crontab定时复制文件</h2><span id="more"></span><h3 id="crontab-基本语法"><a href="#crontab-基本语法" class="headerlink" title="crontab 基本语法"></a>crontab 基本语法</h3><p>注：每个用户一套单独的crontab，多个用户需要使用每一个用户单独使用crontab配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab -l 查看该用户定时任务<br>crontab -e 修改该用户定时任务<br></code></pre></td></tr></table></figure><h3 id="crontab-定时赋值修改内容"><a href="#crontab-定时赋值修改内容" class="headerlink" title="crontab 定时赋值修改内容"></a>crontab 定时赋值修改内容</h3><p>Cron表达式生成器: <a href="https://www.bejson.com/othertools/cron/">https://www.bejson.com/othertools/cron/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">* * * * * /bin/cp /源文件路径 /目的文件路径<br></code></pre></td></tr></table></figure><h3 id="crontab-执行日志"><a href="#crontab-执行日志" class="headerlink" title="crontab 执行日志"></a>crontab 执行日志</h3><p>每个用户的crontab执行日志都存放在<code>/var/mail</code>下，以用户名命名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/var/mail<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20220228102305384.png" alt="image-20220228102305384"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>crontab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建iKEv2-strongswan服务</title>
    <link href="/2024/01/12/%E6%90%AD%E5%BB%BAiKEv2-strongswan%E6%9C%8D%E5%8A%A1/"/>
    <url>/2024/01/12/%E6%90%AD%E5%BB%BAiKEv2-strongswan%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建iKEv2-strongswan服务"><a href="#搭建iKEv2-strongswan服务" class="headerlink" title="搭建iKEv2-strongswan服务"></a>搭建iKEv2-strongswan服务</h1><span id="more"></span><ol><li><p>安装strongswan、strongswan-pki包</p></li><li><p>生成私钥及证书</p></li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">pki <span class="hljs-params">--gen</span> <span class="hljs-params">--type</span> rsa <span class="hljs-params">--size</span> 2048 <span class="hljs-params">--outform</span> pem &gt; ca_key.pem<br><br>pki <span class="hljs-params">--self</span> <span class="hljs-params">--in</span> ca_key.pem <span class="hljs-params">--dn</span> <span class="hljs-string">&quot;C=CN, O=GuoDingDing, CN=GuoDingDing CA&quot;</span> <span class="hljs-params">--ca</span> <span class="hljs-params">--type</span> rsa <span class="hljs-params">--lifetime</span> 3650 <span class="hljs-params">--outform</span> pem &gt; ca.pem<br><br>pki <span class="hljs-params">--gen</span> <span class="hljs-params">--type</span> rsa <span class="hljs-params">--size</span> 2048 <span class="hljs-params">--outform</span> pem &gt; server_key.pem<br><br>pki <span class="hljs-params">--pub</span> <span class="hljs-params">--in</span> server_key.pem <span class="hljs-params">--type</span> rsa | pki <span class="hljs-params">--issue</span> <span class="hljs-params">--cacert</span> ca.pem <span class="hljs-params">--cakey</span> ca_key.pem <span class="hljs-params">--dn</span> <span class="hljs-string">&quot;C=CN, O=GuoDingDing,CN=Server&quot;</span> <span class="hljs-params">--san=</span><span class="hljs-string">&quot;119.8.121.182&quot;</span> <span class="hljs-params">--flag</span> serverAuth <span class="hljs-params">--flag</span> ikeIntermediate <span class="hljs-params">--lifetime</span> 1825 <span class="hljs-params">--outform</span> pem &gt; server.pem<br><br>pki <span class="hljs-params">--gen</span> <span class="hljs-params">--type</span> rsa <span class="hljs-params">--size</span> 2048 <span class="hljs-params">--outform</span> pem &gt; client_key.pem<br><br>pki <span class="hljs-params">--pub</span> <span class="hljs-params">--in</span> client_key.pem <span class="hljs-params">--type</span> rsa | pki <span class="hljs-params">--issue</span> <span class="hljs-params">--cacert</span> ca.pem <span class="hljs-params">--cakey</span> ca_key.pem <span class="hljs-params">--dn</span> <span class="hljs-string">&quot;C=CN, O=GuoDingDing, CN=GuoDingDing Client CA&quot;</span> <span class="hljs-params">--lifetime</span> 1095 <span class="hljs-params">--outform</span> pem &gt; GuoDingDing.pem<br><br>openssl pkcs12 -export -inkey client_key.pem -in GuoDingDing.pem -name <span class="hljs-string">&quot;GuoDingDing&quot;</span> -certfile ca.pem -caname <span class="hljs-string">&quot;GuoDingDing CA&quot;</span> -out GuoDingDing.p12<br></code></pre></td></tr></table></figure><p>分别将ca.pem, server.pem, server_key.pem复制到&#x2F;etc&#x2F;ipsec.d&#x2F;下的cacerts, certs, private目录下。将client.p12部署到客户端。</p><ol start="3"><li>编辑以下配置文件</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># /etc/ipsec.conf:</span><br><span class="hljs-built_in"></span><br><span class="hljs-built_in">config </span>setup<br>uniqueids = <span class="hljs-literal">yes</span><br>conn %default<br><span class="hljs-attribute">auto</span>=add<br><span class="hljs-attribute">rekey</span>=<span class="hljs-literal">no</span><br><span class="hljs-attribute">reauth</span>=<span class="hljs-literal">no</span><br><span class="hljs-attribute">fragmentation</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">keyexchange</span>=ikev2<br><span class="hljs-attribute">forceencaps</span>=<span class="hljs-literal">yes</span><br><br><span class="hljs-attribute">dpdaction</span>=clear<br><span class="hljs-attribute">dpddelay</span>=300s<br><br># common left configuration<br><span class="hljs-attribute">left</span>=%defaultroute<br><span class="hljs-attribute">leftsubnet</span>=0.0.0.0/0<br><span class="hljs-attribute">leftauth</span>=pubkey<br><span class="hljs-attribute">leftsendcert</span>=always<br><span class="hljs-attribute">leftcert</span>=server.pem<br><br># common right configuration<br><span class="hljs-attribute">right</span>=%any<br><span class="hljs-attribute">rightsourceip</span>=xxx.xxx.xxx.0/24<br><span class="hljs-attribute">rightdns</span>=xxx.xxx.xxx.xxx,xxx.xxx.xxx.xxx<br><br>conn ikev2-certificate-windows-linux<br><span class="hljs-attribute">rightauth</span>=pubkey<br><br>conn ikev2-macos-ios<br><span class="hljs-attribute">leftid</span>=xxx.xxx.xxx<br><span class="hljs-attribute">rightauth</span>=eap-mschapv2<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ada"># /etc/ipsec.secrets:<br><br># using <span class="hljs-keyword">private</span> key located <span class="hljs-keyword">at</span> /etc/ipsec.d/<span class="hljs-keyword">private</span>/<br> : <span class="hljs-type">RSA</span> server_key.pem<br><br># using username/password<br># USERNAME : <span class="hljs-type">EAP</span> <span class="hljs-string">&quot;USER PASSWORD&quot;</span><br>obama : <span class="hljs-type">EAP</span> <span class="hljs-string">&quot;SuperPassword123&quot;</span><br>putin : <span class="hljs-type">EAP</span> <span class="hljs-string">&quot;KremlinSecure666&quot;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>设置IP转发</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># /etc/sysctl.conf:</span><br><span class="hljs-attr">net.ipv4.ip_forward</span> = <span class="hljs-number">1</span><br><span class="hljs-attr">net.ipv4.conf.all.accept_redirects</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">net.ipv4.conf.all.send_redirects</span> = <span class="hljs-number">0</span><br><span class="hljs-attr">net.ipv4.ip_no_pmtu_disc</span> = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>然后执行：<code>sudo sysctl -p</code></p><ol start="5"><li>设置iptables。在&#x2F;etc&#x2F;rc.local中添加：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -t nat -<span class="hljs-selector-tag">A</span> POSTROUTING -s <span class="hljs-selector-attr">[虚拟网段]</span>/掩码位数 -j MASQUERADE<br>iptables -t mangle -<span class="hljs-selector-tag">A</span> FORWARD <span class="hljs-attr">--match</span> policy <span class="hljs-attr">--pol</span> ipsec <span class="hljs-attr">--dir</span> in -s <span class="hljs-selector-attr">[虚拟网段]</span>/掩码位数 -o <span class="hljs-selector-attr">[出口网络]</span> -<span class="hljs-selector-tag">p</span> tcp -m tcp <span class="hljs-attr">--tcp-flags</span> SYN,RST SYN -m tcpmss <span class="hljs-attr">--mss</span> <span class="hljs-number">1361</span>:<span class="hljs-number">1536</span> -j TCPMSS --set-mss <span class="hljs-number">1360</span><br></code></pre></td></tr></table></figure><ol start="6"><li>重启生效</li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ikev2</tag>
      
      <tag>strongswan</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7.6修改系统最大打开文件数</title>
    <link href="/2024/01/12/Centos7-6%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E6%9C%80%E5%A4%A7%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%95%B0/"/>
    <url>/2024/01/12/Centos7-6%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E6%9C%80%E5%A4%A7%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Centos7-6修改系统最大打开文件数"><a href="#Centos7-6修改系统最大打开文件数" class="headerlink" title="Centos7.6修改系统最大打开文件数"></a>Centos7.6修改系统最大打开文件数</h2><span id="more"></span><h3 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ulimit -n 102400<br></code></pre></td></tr></table></figure><h3 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h3><h4 id="1-修改-etc-systemd-system-conf-文件"><a href="#1-修改-etc-systemd-system-conf-文件" class="headerlink" title="1. 修改/etc/systemd/system.conf  文件"></a>1. 修改<code>/etc/systemd/system.conf </code> 文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/systemd/system.conf <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件最后添加以下内容</span><br>DefaultLimitNOFILE=102400<br>DefaultLimitNPROC=102400<br></code></pre></td></tr></table></figure><h4 id="2-修改-etc-security-limits-conf文件"><a href="#2-修改-etc-security-limits-conf文件" class="headerlink" title="2. 修改/etc/security/limits.conf文件"></a>2. 修改<code>/etc/security/limits.conf</code>文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/security/limits.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件最后添加以下内容</span><br>* soft nofile 102400<br>* hard nofile 102400<br>* soft nproc 102400<br>* hard nproc 102400<br></code></pre></td></tr></table></figure><h4 id="3-重启服务器-reboot"><a href="#3-重启服务器-reboot" class="headerlink" title="3. 重启服务器 reboot"></a>3. 重启服务器 <code>reboot</code></h4><h4 id="4-检查系统最大打开文件数ulimit-a是否修改成102400"><a href="#4-检查系统最大打开文件数ulimit-a是否修改成102400" class="headerlink" title="4. 检查系统最大打开文件数ulimit -a是否修改成102400"></a>4. 检查系统最大打开文件数<code>ulimit -a</code>是否修改成102400</h4><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20220225141029967.png" alt="image-20220225141029967"></p><p>完结撒花</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Centos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github + Hexo 打造个人静态博客</title>
    <link href="/2024/01/12/%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/01/12/%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Github-Hexo-打造个人静态博客"><a href="#Github-Hexo-打造个人静态博客" class="headerlink" title="Github + Hexo 打造个人静态博客"></a>Github + Hexo 打造个人静态博客</h1><span id="more"></span><h3 id="一、前提条件"><a href="#一、前提条件" class="headerlink" title="一、前提条件"></a>一、前提条件</h3><p>Node、Git，自行百度下载即可。</p><blockquote><p>Node 版本不低于10.13，推荐Node.js 12.0及以上版本。下载最新版安装即可。 </p></blockquote><h3 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h3><p>安装Hexo相当简单，安装Nodejs之后执行以下命令安装Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli g  #推荐<br></code></pre></td></tr></table></figure><h4 id="1-初始化第一个博客"><a href="#1-初始化第一个博客" class="headerlink" title="1. 初始化第一个博客"></a>1. 初始化第一个博客</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init [文件夹名称]     #新建一个网站 hexo init blog<br>cd [文件夹名称]            #进入网站目录<br>npm run server           #启动服务器<br></code></pre></td></tr></table></figure><h4 id="2-访问"><a href="#2-访问" class="headerlink" title="2. 访问"></a>2. 访问</h4><p>通过以上步骤，最简单的hexo网站就好了，可以直接访问<code>http://localhost:4000/</code>，来看hexo自带的主题]</p><h3 id="三、配置Github"><a href="#三、配置Github" class="headerlink" title="三、配置Github"></a>三、配置Github</h3><h4 id="1-注册Github账户并登录，点击新建仓库。"><a href="#1-注册Github账户并登录，点击新建仓库。" class="headerlink" title="1. 注册Github账户并登录，点击新建仓库。"></a>1. 注册Github账户并登录，点击新建仓库。</h4><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112103011848.png" alt="image-20240112103011848"></p><p>仓库名称为【个人GitHub账户名】+ github.io，比如我的就是guodd012.github.io</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112103129188.png" alt="image-20240112103129188"></p><p>这里需要注意的有三点：</p><ul><li>仓库名格式：username.github.io</li><li>仓库需要设置public，不能设置为private</li><li>勾选 Add a README file</li></ul><h4 id="2-配置仓库Pages"><a href="#2-配置仓库Pages" class="headerlink" title="2. 配置仓库Pages"></a>2. 配置仓库Pages</h4><p>这里的配置按照以下方式配置即可</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112103604235.png" alt="image-20240112103604235"></p><h3 id="四、上传博客到GitHub仓库"><a href="#四、上传博客到GitHub仓库" class="headerlink" title="四、上传博客到GitHub仓库"></a>四、上传博客到GitHub仓库</h3><h4 id="1-安装-hexo-deployer-git"><a href="#1-安装-hexo-deployer-git" class="headerlink" title="1. 安装 hexo-deployer-git"></a>1. 安装 <code>hexo-deployer-git</code></h4><p>进入我们刚刚创建的本地项目目录下，执行命令安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save <br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112104451130.png" alt="image-20240112104451130"></p><h4 id="2-修改Hexo-配置文件"><a href="#2-修改Hexo-配置文件" class="headerlink" title="2. 修改Hexo 配置文件"></a>2. 修改Hexo 配置文件</h4><p>我们需要修改的是项目目录下的 <code>_config.yml</code> 这个文件</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112104814499.png"></p><ul><li>修改url</li></ul><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112104839807.png" alt="image-20240112104839807"></p><ul><li><p>修改deploy</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112104940144.png"></p></li></ul><p>修改完毕保存后，我们在cmd中执行命令<code>helo d</code>即可部署我们的项目，稍等几分钟，就能访问到了。</p><p>正常到这里就结束了，但后续多上传几次就会报错，这个原因可能是被GitHub限制了，我们需要设置token，并配置到deploy中。</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112105230762.png" alt="image-20240112105230762"></p><h4 id="3-申请GitHub的token"><a href="#3-申请GitHub的token" class="headerlink" title="3. 申请GitHub的token"></a>3. 申请GitHub的token</h4><ul><li><p>打开Settings</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112105342646.png" alt="image-20240112105342646"></p></li><li><p>选择左侧菜单最后一项 <code>Developer Settings</code></p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112105552673.png" alt="image-20240112105552673"></p></li><li><p>选择 token ，并创建新token。</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112105700649.png" alt="image-20240112105700649"></p></li><li><p>创建token</p><p><img src="https://raw.githubusercontent.com/guodd012/typora-user-images/main/imgimage-20240112105807394.png" alt="image-20240112105807394"></p></li></ul><p>expiration是token过期时间，根据大家需求选择合适的即可。</p><p>按照图中勾选权限创建即可。</p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/11/hello-world/"/>
    <url>/2024/01/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
